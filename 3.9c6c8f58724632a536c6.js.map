{"version":3,"sources":["webpack:///./src/components/number.js"],"names":["actions","connect","state","lottoNumber","randomNumber","dispatch","getNumber","arr","getRandomNumber","props","className","number","onClick","models","getRandom"],"mappings":"0IAAA,I,IAAA,M,IACA,O,IACA,OAEYA,E,wJAAZ,O,IACA,OACA,Q,8DAiDe,IAAAC,UAZS,SAACC,GACvB,MAAO,CACLC,YAAcD,EAAME,aAAaD,gBAIV,SAACE,GAC1B,MAAO,CACHC,UAAY,SAACC,GAASF,EAASL,EAAQQ,gBAAgBD,QAI9C,EA/CA,SAACE,GAKd,OACE,wBAAC,UAAD,KACE,+BAAKC,UAAU,mBACb,8CACA,+BAAKA,UAAU,eACb,2CACA,8BAAIA,UAAU,gBACZ,kCACE,6CAEF,kCACE,oDAEF,kCACE,oDAIN,+BAAKA,UAAU,cACb,2CACA,wBAAC,UAAD,CAAYC,OAAQF,EAAMN,eAE5B,+BAAKO,UAAU,cACb,kCAAQE,QA3BK,WACnBH,EAAMH,UAAUO,UAAOC,eA0BjB","file":"3.9c6c8f58724632a536c6.js","sourcesContent":["import React from 'react';\r\nimport Layout from './Layout';\r\nimport ViewNumber from './view-number';\r\n\r\nimport * as actions from '../actions/index';\r\nimport models from '../models/models';\r\nimport { connect } from 'react-redux';\r\n\r\nconst number = (props) => {\r\n  const randomNumber = () => {\r\n    props.getNumber(models.getRandom());\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <div className=\"number-contents\">\r\n        <h2>로또 번호 추첨</h2>\r\n        <nav className=\"options-nav\">\r\n          <h3>추첨 옵션</h3>\r\n          <ul className=\"options-list\">\r\n            <li>\r\n              <button>기본</button>\r\n            </li>\r\n            <li>\r\n              <button>선택배제(미구현)</button>\r\n            </li>\r\n            <li>\r\n              <button>확률(미구현)</button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n        <div className=\"result-box\">\r\n          <h2>추첨 결과</h2>\r\n          <ViewNumber number={props.lottoNumber}/>\r\n        </div>\r\n        <div className=\"submit-box\">\r\n          <button onClick={randomNumber}>추첨하기</button>\r\n        </div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    lottoNumber : state.randomNumber.lottoNumber,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n      getNumber : (arr) => {dispatch(actions.getRandomNumber(arr))},\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(number);"],"sourceRoot":""}